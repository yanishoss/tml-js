{"version":3,"file":"tml.modern.js","sources":["../vendor/wasm_exec.js","../src/loader.ts","../src/tml.ts"],"sourcesContent":["// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n(() => {\n\t// Map multiple JavaScript environments to a single common API,\n\t// preferring web standards over Node.js API.\n\t//\n\t// Environments considered:\n\t// - Browsers\n\t// - Node.js\n\t// - Electron\n\t// - Parcel\n\n\tif (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export Go (neither global, window nor self is defined)\");\n\t}\n\n\tif (!global.require && typeof require !== \"undefined\") {\n\t\tglobal.require = require;\n\t}\n\n\tif (!global.fs && global.require) {\n\t\tglobal.fs = require(\"fs\");\n\t}\n\n\tconst enosys = () => {\n\t\tconst err = new Error(\"not implemented\");\n\t\terr.code = \"ENOSYS\";\n\t\treturn err;\n\t};\n\n\tif (!global.fs) {\n\t\tlet outputBuf = \"\";\n\t\tglobal.fs = {\n\t\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\t\twriteSync(fd, buf) {\n\t\t\t\toutputBuf += decoder.decode(buf);\n\t\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\t\tif (nl != -1) {\n\t\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t\t}\n\t\t\t\treturn buf.length;\n\t\t\t},\n\t\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\t\tcallback(enosys());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\t\tcallback(null, n);\n\t\t\t},\n\t\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tclose(fd, callback) { callback(enosys()); },\n\t\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\t\tfstat(fd, callback) { callback(enosys()); },\n\t\t\tfsync(fd, callback) { callback(null); },\n\t\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tlink(path, link, callback) { callback(enosys()); },\n\t\t\tlstat(path, callback) { callback(enosys()); },\n\t\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\t\treaddir(path, callback) { callback(enosys()); },\n\t\t\treadlink(path, callback) { callback(enosys()); },\n\t\t\trename(from, to, callback) { callback(enosys()); },\n\t\t\trmdir(path, callback) { callback(enosys()); },\n\t\t\tstat(path, callback) { callback(enosys()); },\n\t\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\t\tunlink(path, callback) { callback(enosys()); },\n\t\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t\t};\n\t}\n\n\tif (!global.process) {\n\t\tglobal.process = {\n\t\t\tgetuid() { return -1; },\n\t\t\tgetgid() { return -1; },\n\t\t\tgeteuid() { return -1; },\n\t\t\tgetegid() { return -1; },\n\t\t\tgetgroups() { throw enosys(); },\n\t\t\tpid: -1,\n\t\t\tppid: -1,\n\t\t\tumask() { throw enosys(); },\n\t\t\tcwd() { throw enosys(); },\n\t\t\tchdir() { throw enosys(); },\n\t\t}\n\t}\n\n\tif (!global.crypto) {\n\t\tconst nodeCrypto = require(\"crypto\");\n\t\tglobal.crypto = {\n\t\t\tgetRandomValues(b) {\n\t\t\t\tnodeCrypto.randomFillSync(b);\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!global.performance) {\n\t\tglobal.performance = {\n\t\t\tnow() {\n\t\t\t\tconst [sec, nsec] = process.hrtime();\n\t\t\t\treturn sec * 1000 + nsec / 1000000;\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!global.TextEncoder) {\n\t\tglobal.TextEncoder = require(\"util\").TextEncoder;\n\t}\n\n\tif (!global.TextDecoder) {\n\t\tglobal.TextDecoder = require(\"util\").TextDecoder;\n\t}\n\n\t// End of polyfills for common API.\n\n\tconst encoder = new TextEncoder(\"utf-8\");\n\tconst decoder = new TextDecoder(\"utf-8\");\n\n\tglobal.Go = class {\n\t\tconstructor() {\n\t\t\tthis.argv = [\"js\"];\n\t\t\tthis.env = {};\n\t\t\tthis.exit = (code) => {\n\t\t\t\tif (code !== 0) {\n\t\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\t\tthis._resolveExitPromise = resolve;\n\t\t\t});\n\t\t\tthis._pendingEvent = null;\n\t\t\tthis._scheduledTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\tthis.mem.setUint32(addr + 0, v, true);\n\t\t\t\tthis.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t}\n\n\t\t\tconst getInt64 = (addr) => {\n\t\t\t\tconst low = this.mem.getUint32(addr + 0, true);\n\t\t\t\tconst high = this.mem.getInt32(addr + 4, true);\n\t\t\t\treturn low + high * 4294967296;\n\t\t\t}\n\n\t\t\tconst loadValue = (addr) => {\n\t\t\t\tconst f = this.mem.getFloat64(addr, true);\n\t\t\t\tif (f === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = this.mem.getUint32(addr, true);\n\t\t\t\treturn this._values[id];\n\t\t\t}\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tconst nanHead = 0x7FF80000;\n\n\t\t\t\tif (typeof v === \"number\") {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (v === 0) {\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 1, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.mem.setFloat64(addr, v, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (v) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\tthis.mem.setFloat64(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase null:\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 2, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase true:\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 3, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase false:\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 4, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = this._values.length;\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t}\n\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\tlet typeFlag = 1;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\tthis.mem.setUint32(addr, id, true);\n\t\t\t}\n\n\t\t\tconst loadSlice = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t\t}\n\n\t\t\tconst loadSliceOfValues = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\tconst loadString = (addr) => {\n\t\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t\t}\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\tgo: {\n\t\t\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\n\t\t\t\t\t// func wasmExit(code int32)\n\t\t\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\t\t\tconst code = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tthis.exited = true;\n\t\t\t\t\t\tdelete this._inst;\n\t\t\t\t\t\tdelete this._values;\n\t\t\t\t\t\tdelete this._goRefCounts;\n\t\t\t\t\t\tdelete this._ids;\n\t\t\t\t\t\tdelete this._idPool;\n\t\t\t\t\t\tthis.exit(code);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\t\t\tconst n = this.mem.getInt32(sp + 24, true);\n\t\t\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func resetMemoryDataView()\n\t\t\t\t\t\"runtime.resetMemoryDataView\": (sp) => {\n\t\t\t\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func nanotime1() int64\n\t\t\t\t\t\"runtime.nanotime1\": (sp) => {\n\t\t\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func walltime1() (sec int64, nsec int32)\n\t\t\t\t\t\"runtime.walltime1\": (sp) => {\n\t\t\t\t\t\tconst msec = (new Date).getTime();\n\t\t\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\twhile (this._scheduledTimeouts.has(id)) {\n\t\t\t\t\t\t\t\t\t// for some reason Go failed to register the timeout event, log and try again\n\t\t\t\t\t\t\t\t\t// (temporary workaround for https://github.com/golang/go/issues/28975)\n\t\t\t\t\t\t\t\t\tconsole.warn(\"scheduleTimeoutEvent: missed timeout event\");\n\t\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t\t\t));\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, id, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tconst id = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func getRandomData(r []byte)\n\t\t\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t\"syscall/js.finalizeRef\": (sp) => {\n\t\t\t\t\t\tconst id = this.mem.getUint32(sp + 8, true);\n\t\t\t\t\t\tthis._goRefCounts[id]--;\n\t\t\t\t\t\tif (this._goRefCounts[id] === 0) {\n\t\t\t\t\t\t\tconst v = this._values[id];\n\t\t\t\t\t\t\tthis._values[id] = null;\n\t\t\t\t\t\t\tthis._ids.delete(v);\n\t\t\t\t\t\t\tthis._idPool.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\t\t\tconst result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t\"syscall/js.valueDelete\": (sp) => {\n\t\t\t\t\t\tReflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\t\t\tthis.mem.setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToGo\": (sp) => {\n\t\t\t\t\t\tconst dst = loadSlice(sp + 8);\n\t\t\t\t\t\tconst src = loadValue(sp + 32);\n\t\t\t\t\t\tif (!(src instanceof Uint8Array)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToJS\": (sp) => {\n\t\t\t\t\t\tconst dst = loadValue(sp + 8);\n\t\t\t\t\t\tconst src = loadSlice(sp + 16);\n\t\t\t\t\t\tif (!(dst instanceof Uint8Array)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t\"debug\": (value) => {\n\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tthis._inst = instance;\n\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\tNaN,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tglobal,\n\t\t\t\tthis,\n\t\t\t];\n\t\t\tthis._goRefCounts = []; // number of references that Go has to a JS value, indexed by reference id\n\t\t\tthis._ids = new Map();  // mapping from JS values to reference ids\n\t\t\tthis._idPool = [];      // unused ids that have been garbage collected\n\t\t\tthis.exited = false;    // whether the Go program has exited\n\n\t\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\t\tlet offset = 4096;\n\n\t\t\tconst strPtr = (str) => {\n\t\t\t\tconst ptr = offset;\n\t\t\t\tconst bytes = encoder.encode(str + \"\\0\");\n\t\t\t\tnew Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n\t\t\t\toffset += bytes.length;\n\t\t\t\tif (offset % 8 !== 0) {\n\t\t\t\t\toffset += 8 - (offset % 8);\n\t\t\t\t}\n\t\t\t\treturn ptr;\n\t\t\t};\n\n\t\t\tconst argc = this.argv.length;\n\n\t\t\tconst argvPtrs = [];\n\t\t\tthis.argv.forEach((arg) => {\n\t\t\t\targvPtrs.push(strPtr(arg));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst keys = Object.keys(this.env).sort();\n\t\t\tkeys.forEach((key) => {\n\t\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst argv = offset;\n\t\t\targvPtrs.forEach((ptr) => {\n\t\t\t\tthis.mem.setUint32(offset, ptr, true);\n\t\t\t\tthis.mem.setUint32(offset + 4, 0, true);\n\t\t\t\toffset += 8;\n\t\t\t});\n\n\t\t\tthis._inst.exports.run(argc, argv);\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t\tawait this._exitPromise;\n\t\t}\n\n\t\t_resume() {\n\t\t\tif (this.exited) {\n\t\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t\t}\n\t\t\tthis._inst.exports.resume();\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t}\n\n\t\t_makeFuncWrapper(id) {\n\t\t\tconst go = this;\n\t\t\treturn function () {\n\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n\t\t\t};\n\t\t}\n\t}\n\n\tif (\n\t\tglobal.require &&\n\t\tglobal.require.main === module &&\n\t\tglobal.process &&\n\t\tglobal.process.versions &&\n\t\t!global.process.versions.electron\n\t) {\n\t\tif (process.argv.length < 3) {\n\t\t\tconsole.error(\"usage: go_js_wasm_exec [wasm binary] [arguments]\");\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tconst go = new Go();\n\t\tgo.argv = process.argv.slice(2);\n\t\tgo.env = Object.assign({ TMPDIR: require(\"os\").tmpdir() }, process.env);\n\t\tgo.exit = process.exit;\n\t\tWebAssembly.instantiate(fs.readFileSync(process.argv[2]), go.importObject).then((result) => {\n\t\t\tprocess.on(\"exit\", (code) => { // Node.js exits if no event handler is pending\n\t\t\t\tif (code === 0 && !go.exited) {\n\t\t\t\t\t// deadlock, make Go print error and stack traces\n\t\t\t\t\tgo._pendingEvent = { id: 0 };\n\t\t\t\t\tgo._resume();\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn go.run(result.instance);\n\t\t}).catch((err) => {\n\t\t\tconsole.error(err);\n\t\t\tprocess.exit(1);\n\t\t});\n\t}\n})();\n","import \"../vendor/wasm_exec.js\";\r\n\r\n// @ts-ignore\r\nexport const go = new global.Go();\r\n\r\nif (!WebAssembly.instantiateStreaming) {\r\n  WebAssembly.instantiateStreaming = async (resp, importObject) => {\r\n    const source = await(await resp).arrayBuffer();\r\n    return await WebAssembly.instantiate(source, importObject);\r\n  };\r\n}\r\n\r\nexport const load: (path: string) => Promise<void> = async (path) => {\r\n  try {\r\n    const {instance} = await WebAssembly.instantiateStreaming(fetch(path).then(r => {r.headers.set(\"Content-Type\", \"application/wasm\"); return r}), go.importObject);\r\n\r\n    await go.run(instance);\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n};","import {load} from \"./loader\";\r\nimport {ParserConfig, Workout} from \"./types\";\r\n\r\nconst notReadyYet = new Error(\"WASM module is not ready yet\");\r\n\r\nexport let onReady: () => void = () => {};\r\nif (!(\"TML\" in global))  {\r\n  load(\"https://raw.githubusercontent.com/yanishoss/tml/v1.1.3/bin/main.wasm\")\r\n    .then(() => onReady())\r\n    .catch(e => {throw e});\r\n}\r\n\r\nexport function parse(input: string, conf?: ParserConfig): Workout {\r\n  if (!(\"TML\" in global))  {\r\n    throw notReadyYet;\r\n  }\r\n\r\n  // @ts-ignore\r\n  const ret = TML.parse(input, conf);\r\n\r\n  if (ret.Error !== undefined) {\r\n    throw new Error(ret.Error());\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nexport function withDefaultConfig(): ParserConfig {\r\n  if (!(\"TML\" in global))  {\r\n    throw notReadyYet;\r\n  }\r\n\r\n  // @ts-ignore\r\n  return TML.withDefaultConfig(input, conf);\r\n}"],"names":["global","window","self","Error","require","fs","enosys","err","code","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","decoder","decode","nl","lastIndexOf","console","log","substr","length","write","offset","position","callback","this","chmod","path","mode","chown","uid","gid","close","fchmod","fchown","fstat","fsync","ftruncate","lchown","link","lstat","mkdir","perm","open","flags","read","buffer","readdir","readlink","rename","from","to","rmdir","stat","symlink","truncate","unlink","utimes","atime","mtime","process","getuid","getgid","geteuid","getegid","getgroups","pid","ppid","umask","cwd","chdir","crypto","nodeCrypto","getRandomValues","b","randomFillSync","performance","now","sec","nsec","hrtime","TextEncoder","TextDecoder","encoder","Go","constructor","argv","env","exit","warn","_exitPromise","Promise","resolve","_resolveExitPromise","_pendingEvent","_scheduledTimeouts","Map","_nextCallbackTimeoutID","setInt64","addr","v","mem","setUint32","Math","floor","getInt64","getUint32","getInt32","loadValue","f","getFloat64","isNaN","id","_values","storeValue","setFloat64","undefined","_ids","get","_idPool","pop","_goRefCounts","set","typeFlag","loadSlice","array","len","Uint8Array","_inst","exports","loadSliceOfValues","a","Array","i","loadString","saddr","DataView","timeOrigin","Date","importObject","go","runtime.wasmExit","sp","exited","runtime.wasmWrite","p","n","runtime.resetMemoryDataView","runtime.nanotime1","runtime.walltime1","msec","getTime","setInt32","runtime.scheduleTimeoutEvent","setTimeout","_resume","has","runtime.clearTimeoutEvent","clearTimeout","delete","runtime.getRandomData","syscall/js.finalizeRef","push","syscall/js.stringVal","syscall/js.valueGet","result","Reflect","getsp","syscall/js.valueSet","syscall/js.valueDelete","deleteProperty","syscall/js.valueIndex","syscall/js.valueSetIndex","syscall/js.valueCall","m","args","apply","setUint8","syscall/js.valueInvoke","syscall/js.valueNew","construct","syscall/js.valueLength","parseInt","syscall/js.valuePrepareString","str","encode","String","syscall/js.valueLoadString","syscall/js.valueInstanceOf","syscall/js.copyBytesToGo","dst","src","toCopy","subarray","syscall/js.copyBytesToJS","debug","value","[object Object]","instance","NaN","strPtr","ptr","bytes","argc","argvPtrs","forEach","arg","Object","keys","sort","key","run","resume","_makeFuncWrapper","event","arguments","main","module","versions","electron","error","slice","assign","TMPDIR","tmpdir","WebAssembly","instantiate","readFileSync","then","on","catch","instantiateStreaming","async","resp","source","arrayBuffer","notReadyYet","onReady","parse","input","conf","ret","TML","withDefaultConfig","fetch","r","headers","e","load"],"mappings":"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"}