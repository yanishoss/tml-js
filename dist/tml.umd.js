!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).tmlParser={})}(this,function(e){var t=new global.Go;WebAssembly.instantiateStreaming||(WebAssembly.instantiateStreaming=function(e,t){try{return Promise.resolve(e).then(function(e){return Promise.resolve(e.arrayBuffer()).then(function(e){return Promise.resolve(WebAssembly.instantiate(e,t))})})}catch(e){return Promise.reject(e)}});var n=new Error("WASM module is not ready yet");"TML"in global||function(e){try{return Promise.resolve(function(e,n){try{var r=Promise.resolve(WebAssembly.instantiateStreaming(fetch("https://cdn.jsdelivr.net/gh/yanishoss/tml@v1.1.3/bin/main.wasm"),t.importObject)).then(function(e){return Promise.resolve(t.run(e.instance)).then(function(){})})}catch(e){return n(e)}return r&&r.then?r.then(void 0,n):r}(0,function(e){throw e}))}catch(e){return Promise.reject(e)}}().then(function(){}).catch(function(e){throw e}),e.onReady=function(){},e.parse=function(e,t){if(!("TML"in global))throw n;var r=TML.parse(e,t);if(void 0!==r.Error)throw new Error(r.Error());return r},e.withDefaultConfig=function(){if(!("TML"in global))throw n;return TML.withDefaultConfig(input,conf)}});
//# sourceMappingURL=tml.umd.js.map
