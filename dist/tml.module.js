var r=new global.Go;WebAssembly.instantiateStreaming||(WebAssembly.instantiateStreaming=function(r,t){try{return Promise.resolve(r).then(function(r){return Promise.resolve(r.arrayBuffer()).then(function(r){return Promise.resolve(WebAssembly.instantiate(r,t))})})}catch(r){return Promise.reject(r)}});var t=new Error("WASM module is not ready yet"),n=function(){};function e(r,n){if(!("TML"in global))throw t;var e=TML.parse(r,n);if(void 0!==e.Error)throw new Error(e.Error());return e}function i(){if(!("TML"in global))throw t;return TML.withDefaultConfig(input,conf)}"TML"in global||function(t){try{return Promise.resolve(function(t,n){try{var e=Promise.resolve(WebAssembly.instantiateStreaming(fetch("https://cdn.jsdelivr.net/gh/yanishoss/tml@v1.1.3/bin/main.wasm"),r.importObject)).then(function(t){return Promise.resolve(r.run(t.instance)).then(function(){})})}catch(r){return n(r)}return e&&e.then?e.then(void 0,n):e}(0,function(r){throw r}))}catch(r){return Promise.reject(r)}}().then(function(){}).catch(function(r){throw r});export{n as onReady,e as parse,i as withDefaultConfig};
//# sourceMappingURL=tml.module.js.map
