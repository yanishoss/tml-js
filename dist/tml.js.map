{"version":3,"file":"tml.js","sources":["../vendor/wasm_exec.js","../src/loader.ts","../src/tml.ts"],"sourcesContent":["// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n(() => {\n\t// Map multiple JavaScript environments to a single common API,\n\t// preferring web standards over Node.js API.\n\t//\n\t// Environments considered:\n\t// - Browsers\n\t// - Node.js\n\t// - Electron\n\t// - Parcel\n\n\tif (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export Go (neither global, window nor self is defined)\");\n\t}\n\n\tif (!global.require && typeof require !== \"undefined\") {\n\t\tglobal.require = require;\n\t}\n\n\tif (!global.fs && global.require) {\n\t\tglobal.fs = require(\"fs\");\n\t}\n\n\tconst enosys = () => {\n\t\tconst err = new Error(\"not implemented\");\n\t\terr.code = \"ENOSYS\";\n\t\treturn err;\n\t};\n\n\tif (!global.fs) {\n\t\tlet outputBuf = \"\";\n\t\tglobal.fs = {\n\t\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\t\twriteSync(fd, buf) {\n\t\t\t\toutputBuf += decoder.decode(buf);\n\t\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\t\tif (nl != -1) {\n\t\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t\t}\n\t\t\t\treturn buf.length;\n\t\t\t},\n\t\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\t\tcallback(enosys());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\t\tcallback(null, n);\n\t\t\t},\n\t\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tclose(fd, callback) { callback(enosys()); },\n\t\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\t\tfstat(fd, callback) { callback(enosys()); },\n\t\t\tfsync(fd, callback) { callback(null); },\n\t\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tlink(path, link, callback) { callback(enosys()); },\n\t\t\tlstat(path, callback) { callback(enosys()); },\n\t\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\t\treaddir(path, callback) { callback(enosys()); },\n\t\t\treadlink(path, callback) { callback(enosys()); },\n\t\t\trename(from, to, callback) { callback(enosys()); },\n\t\t\trmdir(path, callback) { callback(enosys()); },\n\t\t\tstat(path, callback) { callback(enosys()); },\n\t\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\t\tunlink(path, callback) { callback(enosys()); },\n\t\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t\t};\n\t}\n\n\tif (!global.process) {\n\t\tglobal.process = {\n\t\t\tgetuid() { return -1; },\n\t\t\tgetgid() { return -1; },\n\t\t\tgeteuid() { return -1; },\n\t\t\tgetegid() { return -1; },\n\t\t\tgetgroups() { throw enosys(); },\n\t\t\tpid: -1,\n\t\t\tppid: -1,\n\t\t\tumask() { throw enosys(); },\n\t\t\tcwd() { throw enosys(); },\n\t\t\tchdir() { throw enosys(); },\n\t\t}\n\t}\n\n\tif (!global.crypto) {\n\t\tconst nodeCrypto = require(\"crypto\");\n\t\tglobal.crypto = {\n\t\t\tgetRandomValues(b) {\n\t\t\t\tnodeCrypto.randomFillSync(b);\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!global.performance) {\n\t\tglobal.performance = {\n\t\t\tnow() {\n\t\t\t\tconst [sec, nsec] = process.hrtime();\n\t\t\t\treturn sec * 1000 + nsec / 1000000;\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!global.TextEncoder) {\n\t\tglobal.TextEncoder = require(\"util\").TextEncoder;\n\t}\n\n\tif (!global.TextDecoder) {\n\t\tglobal.TextDecoder = require(\"util\").TextDecoder;\n\t}\n\n\t// End of polyfills for common API.\n\n\tconst encoder = new TextEncoder(\"utf-8\");\n\tconst decoder = new TextDecoder(\"utf-8\");\n\n\tglobal.Go = class {\n\t\tconstructor() {\n\t\t\tthis.argv = [\"js\"];\n\t\t\tthis.env = {};\n\t\t\tthis.exit = (code) => {\n\t\t\t\tif (code !== 0) {\n\t\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\t\tthis._resolveExitPromise = resolve;\n\t\t\t});\n\t\t\tthis._pendingEvent = null;\n\t\t\tthis._scheduledTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\tthis.mem.setUint32(addr + 0, v, true);\n\t\t\t\tthis.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t}\n\n\t\t\tconst getInt64 = (addr) => {\n\t\t\t\tconst low = this.mem.getUint32(addr + 0, true);\n\t\t\t\tconst high = this.mem.getInt32(addr + 4, true);\n\t\t\t\treturn low + high * 4294967296;\n\t\t\t}\n\n\t\t\tconst loadValue = (addr) => {\n\t\t\t\tconst f = this.mem.getFloat64(addr, true);\n\t\t\t\tif (f === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = this.mem.getUint32(addr, true);\n\t\t\t\treturn this._values[id];\n\t\t\t}\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tconst nanHead = 0x7FF80000;\n\n\t\t\t\tif (typeof v === \"number\") {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (v === 0) {\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 1, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.mem.setFloat64(addr, v, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (v) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\tthis.mem.setFloat64(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase null:\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 2, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase true:\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 3, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase false:\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 4, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = this._values.length;\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t}\n\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\tlet typeFlag = 1;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\tthis.mem.setUint32(addr, id, true);\n\t\t\t}\n\n\t\t\tconst loadSlice = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t\t}\n\n\t\t\tconst loadSliceOfValues = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\tconst loadString = (addr) => {\n\t\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t\t}\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\tgo: {\n\t\t\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\n\t\t\t\t\t// func wasmExit(code int32)\n\t\t\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\t\t\tconst code = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tthis.exited = true;\n\t\t\t\t\t\tdelete this._inst;\n\t\t\t\t\t\tdelete this._values;\n\t\t\t\t\t\tdelete this._goRefCounts;\n\t\t\t\t\t\tdelete this._ids;\n\t\t\t\t\t\tdelete this._idPool;\n\t\t\t\t\t\tthis.exit(code);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\t\t\tconst n = this.mem.getInt32(sp + 24, true);\n\t\t\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func resetMemoryDataView()\n\t\t\t\t\t\"runtime.resetMemoryDataView\": (sp) => {\n\t\t\t\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func nanotime1() int64\n\t\t\t\t\t\"runtime.nanotime1\": (sp) => {\n\t\t\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func walltime1() (sec int64, nsec int32)\n\t\t\t\t\t\"runtime.walltime1\": (sp) => {\n\t\t\t\t\t\tconst msec = (new Date).getTime();\n\t\t\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\twhile (this._scheduledTimeouts.has(id)) {\n\t\t\t\t\t\t\t\t\t// for some reason Go failed to register the timeout event, log and try again\n\t\t\t\t\t\t\t\t\t// (temporary workaround for https://github.com/golang/go/issues/28975)\n\t\t\t\t\t\t\t\t\tconsole.warn(\"scheduleTimeoutEvent: missed timeout event\");\n\t\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t\t\t));\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, id, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tconst id = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func getRandomData(r []byte)\n\t\t\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t\"syscall/js.finalizeRef\": (sp) => {\n\t\t\t\t\t\tconst id = this.mem.getUint32(sp + 8, true);\n\t\t\t\t\t\tthis._goRefCounts[id]--;\n\t\t\t\t\t\tif (this._goRefCounts[id] === 0) {\n\t\t\t\t\t\t\tconst v = this._values[id];\n\t\t\t\t\t\t\tthis._values[id] = null;\n\t\t\t\t\t\t\tthis._ids.delete(v);\n\t\t\t\t\t\t\tthis._idPool.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\t\t\tconst result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t\"syscall/js.valueDelete\": (sp) => {\n\t\t\t\t\t\tReflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\t\t\tthis.mem.setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToGo\": (sp) => {\n\t\t\t\t\t\tconst dst = loadSlice(sp + 8);\n\t\t\t\t\t\tconst src = loadValue(sp + 32);\n\t\t\t\t\t\tif (!(src instanceof Uint8Array)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToJS\": (sp) => {\n\t\t\t\t\t\tconst dst = loadValue(sp + 8);\n\t\t\t\t\t\tconst src = loadSlice(sp + 16);\n\t\t\t\t\t\tif (!(dst instanceof Uint8Array)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t\"debug\": (value) => {\n\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tthis._inst = instance;\n\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\tNaN,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tglobal,\n\t\t\t\tthis,\n\t\t\t];\n\t\t\tthis._goRefCounts = []; // number of references that Go has to a JS value, indexed by reference id\n\t\t\tthis._ids = new Map();  // mapping from JS values to reference ids\n\t\t\tthis._idPool = [];      // unused ids that have been garbage collected\n\t\t\tthis.exited = false;    // whether the Go program has exited\n\n\t\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\t\tlet offset = 4096;\n\n\t\t\tconst strPtr = (str) => {\n\t\t\t\tconst ptr = offset;\n\t\t\t\tconst bytes = encoder.encode(str + \"\\0\");\n\t\t\t\tnew Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n\t\t\t\toffset += bytes.length;\n\t\t\t\tif (offset % 8 !== 0) {\n\t\t\t\t\toffset += 8 - (offset % 8);\n\t\t\t\t}\n\t\t\t\treturn ptr;\n\t\t\t};\n\n\t\t\tconst argc = this.argv.length;\n\n\t\t\tconst argvPtrs = [];\n\t\t\tthis.argv.forEach((arg) => {\n\t\t\t\targvPtrs.push(strPtr(arg));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst keys = Object.keys(this.env).sort();\n\t\t\tkeys.forEach((key) => {\n\t\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst argv = offset;\n\t\t\targvPtrs.forEach((ptr) => {\n\t\t\t\tthis.mem.setUint32(offset, ptr, true);\n\t\t\t\tthis.mem.setUint32(offset + 4, 0, true);\n\t\t\t\toffset += 8;\n\t\t\t});\n\n\t\t\tthis._inst.exports.run(argc, argv);\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t\tawait this._exitPromise;\n\t\t}\n\n\t\t_resume() {\n\t\t\tif (this.exited) {\n\t\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t\t}\n\t\t\tthis._inst.exports.resume();\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t}\n\n\t\t_makeFuncWrapper(id) {\n\t\t\tconst go = this;\n\t\t\treturn function () {\n\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n\t\t\t};\n\t\t}\n\t}\n\n\tif (\n\t\tglobal.require &&\n\t\tglobal.require.main === module &&\n\t\tglobal.process &&\n\t\tglobal.process.versions &&\n\t\t!global.process.versions.electron\n\t) {\n\t\tif (process.argv.length < 3) {\n\t\t\tconsole.error(\"usage: go_js_wasm_exec [wasm binary] [arguments]\");\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tconst go = new Go();\n\t\tgo.argv = process.argv.slice(2);\n\t\tgo.env = Object.assign({ TMPDIR: require(\"os\").tmpdir() }, process.env);\n\t\tgo.exit = process.exit;\n\t\tWebAssembly.instantiate(fs.readFileSync(process.argv[2]), go.importObject).then((result) => {\n\t\t\tprocess.on(\"exit\", (code) => { // Node.js exits if no event handler is pending\n\t\t\t\tif (code === 0 && !go.exited) {\n\t\t\t\t\t// deadlock, make Go print error and stack traces\n\t\t\t\t\tgo._pendingEvent = { id: 0 };\n\t\t\t\t\tgo._resume();\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn go.run(result.instance);\n\t\t}).catch((err) => {\n\t\t\tconsole.error(err);\n\t\t\tprocess.exit(1);\n\t\t});\n\t}\n})();\n","import \"../vendor/wasm_exec.js\";\r\n\r\n// @ts-ignore\r\nexport const go = new global.Go();\r\n\r\nif (!WebAssembly.instantiateStreaming) {\r\n  WebAssembly.instantiateStreaming = async (resp, importObject) => {\r\n    const source = await(await resp).arrayBuffer();\r\n    return await WebAssembly.instantiate(source, importObject);\r\n  };\r\n}\r\n\r\nexport const load: (path: string) => Promise<void> = async (path) => {\r\n  try {\r\n    const {instance} = await WebAssembly.instantiateStreaming(fetch(path).then(r => {r = new Response(r.body, r); r.headers.set(\"Content-Type\", \"application/wasm\"); return r}), go.importObject);\r\n\r\n    await go.run(instance);\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n};","import {load} from \"./loader\";\r\nimport {ParserConfig, Workout} from \"./types\";\r\n\r\nconst notReadyYet = new Error(\"WASM module is not ready yet\");\r\n\r\nexport let onReady: () => void = () => {};\r\nif (!(\"TML\" in global))  {\r\n  load(\"https://raw.githubusercontent.com/yanishoss/tml/v1.1.3/bin/main.wasm\")\r\n    .then(() => onReady())\r\n    .catch(e => {throw e});\r\n}\r\n\r\nexport function parse(input: string, conf?: ParserConfig): Workout {\r\n  if (!(\"TML\" in global))  {\r\n    throw notReadyYet;\r\n  }\r\n\r\n  // @ts-ignore\r\n  const ret = TML.parse(input, conf);\r\n\r\n  if (ret.Error !== undefined) {\r\n    throw new Error(ret.Error());\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nexport function withDefaultConfig(): ParserConfig {\r\n  if (!(\"TML\" in global))  {\r\n    throw notReadyYet;\r\n  }\r\n\r\n  // @ts-ignore\r\n  return TML.withDefaultConfig(input, conf);\r\n}"],"names":["global","window","self","Error","require","fs","enosys","err","code","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","nl","decoder","decode","lastIndexOf","console","log","substr","length","write","offset","position","callback","this","chmod","path","mode","chown","uid","gid","close","fchmod","fchown","fstat","fsync","ftruncate","lchown","link","lstat","mkdir","perm","open","flags","read","buffer","readdir","readlink","rename","from","to","rmdir","stat","symlink","truncate","unlink","utimes","atime","mtime","process","getuid","getgid","geteuid","getegid","getgroups","pid","ppid","umask","cwd","chdir","crypto","nodeCrypto","getRandomValues","b","randomFillSync","performance","now","hrtime","TextEncoder","TextDecoder","encoder","Go","argv","env","exit","warn","_exitPromise","Promise","resolve","_this","_resolveExitPromise","_pendingEvent","_scheduledTimeouts","Map","_nextCallbackTimeoutID","setInt64","addr","v","mem","setUint32","Math","floor","getInt64","getUint32","getInt32","loadValue","f","getFloat64","isNaN","id","_values","storeValue","setFloat64","undefined","_ids","get","_idPool","pop","_goRefCounts","set","typeFlag","loadSlice","array","len","Uint8Array","_inst","exports","loadSliceOfValues","a","Array","i","loadString","saddr","DataView","timeOrigin","Date","importObject","go","runtime.wasmExit","sp","exited","runtime.wasmWrite","p","n","runtime.resetMemoryDataView","runtime.nanotime1","runtime.walltime1","msec","getTime","setInt32","runtime.scheduleTimeoutEvent","setTimeout","_resume","has","runtime.clearTimeoutEvent","clearTimeout","runtime.getRandomData","syscall/js.finalizeRef","push","syscall/js.stringVal","syscall/js.valueGet","result","Reflect","getsp","syscall/js.valueSet","syscall/js.valueDelete","deleteProperty","syscall/js.valueIndex","syscall/js.valueSetIndex","syscall/js.valueCall","m","args","apply","setUint8","syscall/js.valueInvoke","syscall/js.valueNew","construct","syscall/js.valueLength","parseInt","syscall/js.valuePrepareString","str","encode","String","syscall/js.valueLoadString","syscall/js.valueInstanceOf","syscall/js.copyBytesToGo","dst","src","toCopy","subarray","syscall/js.copyBytesToJS","debug","value","run","instance","_this3","NaN","strPtr","ptr","bytes","argc","argvPtrs","forEach","arg","Object","keys","sort","key","resume","_makeFuncWrapper","event","arguments","main","module","versions","electron","error","slice","assign","TMPDIR","tmpdir","WebAssembly","instantiate","readFileSync","then","on","instantiateStreaming","resp","_resp","arrayBuffer","source","notReadyYet","fetch","r","Response","body","headers","e","load","input","conf","ret","TML","parse","withDefaultConfig"],"mappings":"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"}