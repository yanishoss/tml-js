var e=new global.Go;WebAssembly.instantiateStreaming||(WebAssembly.instantiateStreaming=function(e,t){try{return Promise.resolve(e).then(function(e){return Promise.resolve(e.arrayBuffer()).then(function(e){return Promise.resolve(WebAssembly.instantiate(e,t))})})}catch(e){return Promise.reject(e)}});var t=new Error("WASM module is not ready yet");"TML_parse"in global||function(t){try{return Promise.resolve(function(t,r){try{var n=Promise.resolve(WebAssembly.instantiateStreaming(fetch("https://cdn.jsdelivr.net/gh/yanishoss/tml/bin/main.wasm"),e.importObject)).then(function(t){return Promise.resolve(e.run(t.instance)).then(function(){})})}catch(e){return r(e)}return n&&n.then?n.then(void 0,r):n}(0,function(e){throw e}))}catch(e){return Promise.reject(e)}}().then(function(){}).catch(function(e){throw e}),exports.onReady=function(){},exports.parse=function(e,r){if(!("TML_parse"in global))throw t;var n=TML_parse(e,r);if(void 0!==n.Error)throw new Error(n.Error());return n},exports.withDefaultConfig=function(){if(!("TML_withDefaultConfig"in global))throw t;return TML_withDefaultConfig(input,conf)};
//# sourceMappingURL=tml.js.map
